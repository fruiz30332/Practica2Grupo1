{
	"name": "dataflow_Practica2_Grupo1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "33_cases_deaths_csv",
						"type": "DatasetReference"
					},
					"name": "CasesDeaths"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Destination_csv",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "select2"
				},
				{
					"name": "pivot1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as short,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CasesDeaths",
				"select2 filter(continent == 'Europe') ~> filter1",
				"CasesDeaths select(mapColumn(",
				"          country,",
				"          country_code,",
				"          continent,",
				"          population,",
				"          case_type = indicator,",
				"          daily_count,",
				"          date",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"filter1 pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          date),",
				"     pivotBy(case_type),",
				"     count = sum(toInteger(daily_count)),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivot1",
				"pivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          country as string,",
				"          country_code as string,",
				"          population as string,",
				"          date as string,",
				"          {confirmed cases_count} as string,",
				"          deaths_count as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}